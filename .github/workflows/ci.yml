name: Java CI with Gradle

on:
  push:
    paths:
      - 'app/entrada-usuario/**'
  pull_request:
    paths:
      - 'app/entrada-usuario/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Configurar Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache do Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Conceder permissão para o wrapper
      run: chmod +x gradlew

    # - name: Compilar e testar (somente entrada-usuario)
    #   run: ./gradlew clean build jacocoTestReport

    # - name: Enviar cobertura para Codecov (somente entrada-usuario)
    #   uses: codecov/codecov-action@v4
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     files: app/build/reports/jacoco/test/jacocoTestReport.xml
    #     fail_ci_if_error: true

    # - name: Análise com SonarQube (somente entrada-usuario)
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: |
    #     ./gradlew clean build
    #     ./gradlew sonar

    - name: SonarQube (somente entrada-usuario)
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./gradlew clean build
        ./gradlew -p app -Dsonar.token=$SONAR_TOKEN sonar

    - name: Extrair métricas Sonar → relatorio-sonar.json
      working-directory: app
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_PROJECT_KEY: lipesanfelice_workflows
        SONAR_OUTPUT_DIR: ${{ github.workspace }}/app/entrada-usuario
      run: ../gradlew bootRun --args='--acao=extrair-sonar --spring.main.web-application-type=none'

    - name: Conferir arquivo salvo
      run: |
        ls -la $GITHUB_WORKSPACE/app/entrada-usuario || true
        test -f $GITHUB_WORKSPACE/app/entrada-usuario/relatorio-sonar.json && echo "OK" || (echo "NOK" && exit 1)
    
    - name: Publicar relatorio-sonar.json
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: relatorio-sonar
        path: app/entrada-usuario/relatorio-sonar.json
        if-no-files-found: error
        retention-days: 30








