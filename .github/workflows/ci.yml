name: Java CI with Gradle

on:
  push:
    paths:
      - 'app/entrada-usuario/**'
  pull_request:
    paths:
      - 'app/entrada-usuario/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Configurar Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache do Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Conceder permissão para o wrapper
      run: chmod +x gradlew

    # - name: Compilar e testar (somente entrada-usuario)
    #   run: ./gradlew clean build jacocoTestReport

    # - name: Enviar cobertura para Codecov (somente entrada-usuario)
    #   uses: codecov/codecov-action@v4
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     files: app/build/reports/jacoco/test/jacocoTestReport.xml
    #     fail_ci_if_error: true

    # - name: Análise com SonarQube (somente entrada-usuario)
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: |
    #     ./gradlew clean build
    #     ./gradlew sonar

    - name: SonarQube (somente entrada-usuario)
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./gradlew clean build
        ./gradlew -p app -Dsonar.token=$SONAR_TOKEN sonar

    # - name: Extrair e salvar relatório SonarCloud
    #   working-directory: app
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: ../gradlew salvarRelatorioSonar

    # - name: Conferir arquivo salvo
    #   run: |
    #     ls -la "$GITHUB_WORKSPACE/app/entrada-usuario" || true
    #     test -s "$GITHUB_WORKSPACE/app/entrada-usuario/relatorio-sonar.json" && echo "OK: presente" || (echo "NOK: ausente" && exit 1)

    - name: Baixar métricas do Sonar e salvar JSON
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
          mkdir -p app/entrada-usuario
          curl -s -u "${SONAR_TOKEN}:" \
            "https://sonarcloud.io/api/measures/component?component=${{ vars.SONAR_PROJECT }}&metricKeys=coverage,lines_to_cover,uncovered_lines,complexity,bugs,vulnerabilities,code_smells,duplicated_lines_density" \
            > app/entrada-usuario/relatorio-sonar.json
          test -s app/entrada-usuario/relatorio-sonar.json

    - name: Commit e push do relatorio-sonar.json
      run: |
          git config user.name  "lipesanfelice"
          git config user.email "felipesanfelice59@gmail.com"
          git add app/entrada-usuario/relatorio-sonar.json
          if git diff --cached --quiet; then
            echo "Sem mudanças para commitar"
          else
            git commit -m "chore(ci): atualizar relatorio-sonar.json [skip ci]"
            git push origin HEAD:${{ github.ref_name }}
          fi





