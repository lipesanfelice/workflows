plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id "org.sonarqube" version "6.2.0.5505"
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.5'
}

repositories {
    mavenCentral()
}

dependencies {
    // Testes
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Utilitários
    implementation libs.guava
    implementation 'org.json:json:20240303'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'commons-io:commons-io:2.16.1'

    // Spring Boot Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Testes Spring Boot
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
    classDirectories.setFrom(
        fileTree(
            dir: "$projectDir/src/main/java", // project/ TEM src/
            includes: ['app/entrada-usuario/**']
        )
    )
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'org.example.web.WebApplication'
}

springBoot {
    mainClass = 'org.example.web.WebApplication' 
}

// sonar {
//     properties {
//         property "sonar.projectKey", "lipesanfelice_workflows"
//         property "sonar.organization", "lipesanfelice"
//         property "sonar.host.url", "https://sonarcloud.io"
//         property "sonar.token", "869a0095d5eeff251ea1d9ea8bdd34cc9e4cbe38"
//         property "sonar.java.binaries", "${buildDir}/classes"
//         property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
//     }
// }

sonar {
    properties {
        property "sonar.projectKey", "lipesanfelice_workflows"
        property "sonar.organization", "lipesanfelice"
        property "sonar.host.url", "https://sonarcloud.io"
        // property "sonar.token", System.getenv("SONAR_TOKEN")
        property "sonar.token", "869a0095d5eeff251ea1d9ea8bdd34cc9e4cbe38"

        // ✅ Foco absoluto na pasta entrada-usuario
        property "sonar.sources", "${projectDir}/entrada-usuario"
        
        // ✅ Incluir apenas Java dessa pasta
        property "sonar.inclusions", "app/entrada-usuario/**/*.java"
        
        // ✅ Excluir TUDO que não for da pasta entrada-usuario
        property "sonar.exclusions", "**/*.java,!app/entrada-usuario/**/*.java"
        
        // // ✅ Para análise estática pura (sem compilação)
        // property "sonar.analysis.mode", "preview"

        // property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        //property "sonar.sources", "app/entrada-usuario"
        // property "sonar.inclusions", "**/*.java"
    }
}


tasks.withType(JavaExec).configureEach {
    environment 'JAVA_TOOL_OPTIONS', '-Dfile.encoding=UTF-8'
}

tasks.named('test') {
    useJUnitPlatform()
}
